
languages:
- cmn-hans
- und

messages:
- key: 显示帮助信息
  message:
    msg: 显示帮助信息

- key: 显示版本号
  message:
    msg: 显示版本号

- key: 是否显示被标记为 IGNORE 的日志内容
  message:
    msg: 是否显示不重要的提示信息

- key: 本地环境 %s
  message:
    msg: 本地环境：%s

- key: 获取本地环境出错：%s
  message:
    msg: 获取本地环境出错：%s

- key: 显示帮助信息
  message:
    msg: |
      显示帮助信息

- key: 显示版本信息
  message:
    msg: |
      显示版本信息

- key: 未指定模块名称
  message:
    msg: 未指定模块名称

- key: 显示完整的版本号
  message:
    msg: 显示完整的版本号

- key: 未找到配置文件：%s
  message:
    msg: |
      未找到配置文件：%s，你可以通过 gobuild init 在当前目录下生成一个。

- key: 未找到子命令 %s
  message:
    msg: 未找到子命令 %s

- key: gobuild 是 Go 的热编译工具，监视文件变化，并编译和运行程序。
  message:
    msg: |
      gobuild 是 Go 的热编译工具，监视文件变化，并编译和运行程序。

- key: 源代码采用 %s 开源许可证，并发布于 %s
  message:
    msg: |
      源代码采用 %s 开源许可证发布于 %s

- key: 热编译代码
  message:
    msg: |
      热编译代码

      根据当前目录下的 .gobuild.yaml 初始化热编译监视器，
      对代码进行热编译，不会监视隐藏文件和隐藏目录下的文件。

      语法：
      gobuild watch {options}

- key: 包含的子命令：
  message:
    msg: 包含的子命令：

- key: 可用选项：
  message:
    msg: 可用选项：

- key: 初始化项目
  message:
    msg: |
      初始化项目

      语法：
      gobuild init {mod}

      mod 
        为 go.mod 中的模块名称，其最后一个目录元素也将作为文件名称在当前目录下创建，
        同时还会创建 go.mod 文件和 .gobuild.yaml 文件，以及在 cmd 子目录的程序入口 main 方法。

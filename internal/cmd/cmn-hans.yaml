
languages:
- cmn-hans
- und

messages:
- key: 显示帮助信息
  message:
    msg: 显示帮助信息

- key: 显示版本号
  message:
    msg: 显示版本号

- key: 是否查找子目录
  message:
    msg: 是否监视子目录

- key: 是否显示被标记为 IGNORE 的日志内容
  message:
    msg: 是否显示不重要的提示信息

- key: 指定输出名称，程序的工作目录随之改变
  message:
    msg: 指定输出名称，程序的工作目录随之改变

- key: 传递给编译程序的参数
  message:
    msg: 传递给编译程序的参数

- key: 指定监视的文件扩展，区分大小写
  message:
    msg: 指定监视的文件扩展，区分大小写。* 表示监视所有类型文件，空值代表不监视任何文件

- key: 指定需要编译的文件
  message:
    msg: 指定需要编译的文件

- key: 监视器的更新频率
  message:
    msg: 监视器的更新频率，单位为秒

- key: 本地环境 %s
  message:
    msg: 本地环境：%s

- key: 获取本地环境出错：%s
  message:
    msg: 获取本地环境出错：%s

- key: 显示帮助信息
  message:
    msg: 显示帮助信息

- key: 显示版本信息
  message:
    msg: 显示版本信息

- key: 未指定模块名称
  message:
    msg: 未指定模块名称

- key: 显示完整的版本号
  message:
    msg: 显示完整的版本号

- key: 未找到子命令 %s
  message:
    msg: 未找到子命令 %s

- key: gobuild 是 Go 的热编译工具，监视文件变化，并编译和运行程序。
  message:
    msg: |
      gobuild 是 Go 的热编译工具，监视文件变化，并编译和运行程序。

- key: 源代码采用 MIT 开源许可证，并发布于 %s
  message:
    msg: 源代码采用 MIT 开源许可证发布于 %s

- key: 热编译代码
  message:
    msg: |
      热编译代码

      语法：
      gobuild watch [options] [dependents]

      dependents:
        指定其它依赖的目录，只能出现在命令的尾部。


      常见用法:

      gobuild watch
        监视当前目录，若有变动，则重新编译当前目录下的 *.go 文件；

      gobuild watch -main=main.go
        监视当前目录，若有变动，则重新编译当前目录下的 main.go 文件；

      gobuild watch -main="main.go" dir1 dir2
        监视当前目录及 dir1 和 dir2，若有变动，则重新编译当前目录下的 main.go 文件；

      NOTE: 不会监视隐藏文件和隐藏目录下的文件。

- key: 包含的子命令：
  message:
    msg: 包含的子命令：

- key: 可用选项：
  message:
    msg: 可用选项：

- key: 初始化项目
  message:
    msg: |
      初始化项目

      语法：
      gobuild init {mod}

      mod 
        为 go.mod 中的模块名称，其最后一个目录元素也将作为文件名称在当前目录下创建，
        同时还会创建 go.mod 文件和 .gobuild.yaml 文件，以及在 cmd 子目录的程序入口 main 方法。
